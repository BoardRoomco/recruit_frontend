import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { useAuth } from '../../context/AuthContext';
import { jobsAPI, applicationsAPI } from '../../services/api';
const Dashboard = () => {
    var _a, _b;
    const { user } = useAuth();
    const [jobs, setJobs] = useState([]);
    const [applications, setApplications] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState('');
    useEffect(() => {
        var _a;
        const fetchDashboardData = async () => {
            var _a, _b, _c;
            try {
                setLoading(true);
                const [jobsData, applicationsData] = await Promise.all([
                    jobsAPI.getByCompany(((_a = user === null || user === void 0 ? void 0 : user.company) === null || _a === void 0 ? void 0 : _a.id) || ''),
                    applicationsAPI.getCompanyApplications()
                ]);
                setJobs(jobsData);
                setApplications(applicationsData);
            }
            catch (err) {
                setError(((_c = (_b = err.response) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.message) || 'Failed to load dashboard data');
            }
            finally {
                setLoading(false);
            }
        };
        if ((_a = user === null || user === void 0 ? void 0 : user.company) === null || _a === void 0 ? void 0 : _a.id) {
            fetchDashboardData();
        }
    }, [(_a = user === null || user === void 0 ? void 0 : user.company) === null || _a === void 0 ? void 0 : _a.id]);
    if (loading) {
        return (_jsx("div", { className: "min-h-screen bg-gray-50 flex items-center justify-center", children: _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto" }), _jsx("p", { className: "mt-4 text-gray-600", children: "Loading dashboard..." })] }) }));
    }
    return (_jsx("div", { className: "min-h-screen bg-gray-50 py-8", children: _jsxs("div", { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8", children: [_jsx("div", { className: "mb-8", children: _jsxs("div", { className: "flex justify-between items-center", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold text-gray-900", children: "Company Dashboard" }), _jsxs("p", { className: "text-gray-600 mt-2", children: ["Welcome back, ", (_b = user === null || user === void 0 ? void 0 : user.company) === null || _b === void 0 ? void 0 : _b.name] })] }), _jsxs(Link, { to: "/dashboard/create", className: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500", children: [_jsx("svg", { className: "w-4 h-4 mr-2", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 4v16m8-8H4" }) }), "Create New Job"] })] }) }), error && (_jsx("div", { className: "mb-6 p-4 bg-red-50 border border-red-200 rounded-md", children: _jsx("p", { className: "text-red-600", children: error }) })), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-6 mb-8", children: [_jsx("div", { className: "bg-white overflow-hidden shadow rounded-lg", children: _jsx("div", { className: "p-5", children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("svg", { className: "h-6 w-6 text-gray-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m8 0V6a2 2 0 012 2v6a2 2 0 01-2 2H8a2 2 0 01-2-2V8a2 2 0 012-2V6" }) }) }), _jsx("div", { className: "ml-5 w-0 flex-1", children: _jsxs("dl", { children: [_jsx("dt", { className: "text-sm font-medium text-gray-500 truncate", children: "Active Jobs" }), _jsx("dd", { className: "text-lg font-medium text-gray-900", children: jobs.filter(job => job.status === 'active').length })] }) })] }) }) }), _jsx("div", { className: "bg-white overflow-hidden shadow rounded-lg", children: _jsx("div", { className: "p-5", children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("svg", { className: "h-6 w-6 text-gray-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" }) }) }), _jsx("div", { className: "ml-5 w-0 flex-1", children: _jsxs("dl", { children: [_jsx("dt", { className: "text-sm font-medium text-gray-500 truncate", children: "Total Applications" }), _jsx("dd", { className: "text-lg font-medium text-gray-900", children: applications.length })] }) })] }) }) }), _jsx("div", { className: "bg-white overflow-hidden shadow rounded-lg", children: _jsx("div", { className: "p-5", children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("svg", { className: "h-6 w-6 text-gray-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" }) }) }), _jsx("div", { className: "ml-5 w-0 flex-1", children: _jsxs("dl", { children: [_jsx("dt", { className: "text-sm font-medium text-gray-500 truncate", children: "Pending Reviews" }), _jsx("dd", { className: "text-lg font-medium text-gray-900", children: applications.filter(app => app.status === 'submitted').length })] }) })] }) }) })] }), _jsxs("div", { className: "bg-white shadow rounded-lg mb-8", children: [_jsx("div", { className: "px-6 py-4 border-b border-gray-200", children: _jsx("h2", { className: "text-lg font-medium text-gray-900", children: "Recent Job Postings" }) }), _jsx("div", { className: "divide-y divide-gray-200", children: jobs.length === 0 ? (_jsxs("div", { className: "px-6 py-8 text-center", children: [_jsx("svg", { className: "mx-auto h-12 w-12 text-gray-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m8 0V6a2 2 0 012 2v6a2 2 0 01-2 2H8a2 2 0 01-2-2V8a2 2 0 012-2V6" }) }), _jsx("h3", { className: "mt-2 text-sm font-medium text-gray-900", children: "No jobs posted" }), _jsx("p", { className: "mt-1 text-sm text-gray-500", children: "Get started by creating your first job posting." }), _jsx("div", { className: "mt-6", children: _jsx(Link, { to: "/dashboard/create", className: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700", children: "Create Job" }) })] })) : (jobs.slice(0, 5).map((job) => {
                                var _a;
                                return (_jsx("div", { className: "px-6 py-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex-1", children: [_jsx("h3", { className: "text-sm font-medium text-gray-900", children: job.title }), _jsxs("p", { className: "text-sm text-gray-500", children: ["Posted ", new Date(job.createdAt).toLocaleDateString()] })] }), _jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("span", { className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${job.status === 'active' ? 'bg-green-100 text-green-800' :
                                                            job.status === 'draft' ? 'bg-yellow-100 text-yellow-800' :
                                                                'bg-gray-100 text-gray-800'}`, children: job.status }), _jsxs("span", { className: "text-sm text-gray-500", children: [((_a = job._count) === null || _a === void 0 ? void 0 : _a.applications) || 0, " applications"] }), _jsx(Link, { to: `/dashboard/jobs/${job.id}`, className: "text-blue-600 hover:text-blue-500 text-sm font-medium", children: "View Details" })] })] }) }, job.id));
                            })) }), jobs.length > 5 && (_jsx("div", { className: "px-6 py-4 border-t border-gray-200", children: _jsx(Link, { to: "/dashboard/jobs", className: "text-blue-600 hover:text-blue-500 text-sm font-medium", children: "View all jobs \u2192" }) }))] }), _jsxs("div", { className: "bg-white shadow rounded-lg", children: [_jsx("div", { className: "px-6 py-4 border-b border-gray-200", children: _jsx("h2", { className: "text-lg font-medium text-gray-900", children: "Recent Applications" }) }), _jsx("div", { className: "divide-y divide-gray-200", children: applications.length === 0 ? (_jsxs("div", { className: "px-6 py-8 text-center", children: [_jsx("svg", { className: "mx-auto h-12 w-12 text-gray-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" }) }), _jsx("h3", { className: "mt-2 text-sm font-medium text-gray-900", children: "No applications yet" }), _jsx("p", { className: "mt-1 text-sm text-gray-500", children: "Applications will appear here once candidates start applying." })] })) : (applications.slice(0, 5).map((application) => {
                                var _a, _b, _c;
                                return (_jsx("div", { className: "px-6 py-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex-1", children: [_jsxs("h3", { className: "text-sm font-medium text-gray-900", children: [(_a = application.candidate) === null || _a === void 0 ? void 0 : _a.firstName, " ", (_b = application.candidate) === null || _b === void 0 ? void 0 : _b.lastName] }), _jsxs("p", { className: "text-sm text-gray-500", children: ["Applied for ", (_c = application.job) === null || _c === void 0 ? void 0 : _c.title] })] }), _jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("span", { className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${application.status === 'submitted' ? 'bg-blue-100 text-blue-800' :
                                                            application.status === 'reviewing' ? 'bg-yellow-100 text-yellow-800' :
                                                                application.status === 'accepted' ? 'bg-green-100 text-green-800' :
                                                                    'bg-red-100 text-red-800'}`, children: application.status }), _jsx("span", { className: "text-sm text-gray-500", children: new Date(application.createdAt).toLocaleDateString() })] })] }) }, application.id));
                            })) }), applications.length > 5 && (_jsx("div", { className: "px-6 py-4 border-t border-gray-200", children: _jsx(Link, { to: "/dashboard/applications", className: "text-blue-600 hover:text-blue-500 text-sm font-medium", children: "View all applications \u2192" }) }))] })] }) }));
};
export default Dashboard;
